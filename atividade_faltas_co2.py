# -*- coding: utf-8 -*-
"""ATIVIDADE_FALTAS_CO2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ld4Gf2gYo-uaDMTbwL6OSF0MFj0DnTxR

Atividade: Gestão do Efeito Estufa
A gestão do efeito estufa é uma preocupação global, e as emissões de gases de efeito estufa (GEE) são um dos principais contribuintes para as mudanças climáticas.
Nesta atividade, pretendemos criar um programa em Python que avalia a eficiência de um veículo em relação às emissões de CO2 por quilômetro (km) rodado.
1. Objetivo:
• Calcular as emissões de CO2 de um veículo com base em seu tipo de combustível e consumo.
2. Passos:
• Crie uma função chamada calcular_emissoes que aceite três parâmetros: tipo de combustível, o consumo do veículo em km/litro e a distância percorrida em km.
• A função deve retornar à quantidade de CO2 emitida pelo veículo, em kg.
• Considere as seguintes taxas de emissão:
  - Carros a gasolina: 2,3 kg de CO2 por litro
  - Carros a diesel: 2,7 kg de CO2 por litro
  - Carros elétricos: 0 kg de CO2 (zero emissões diretas)
• Utilize uma estrutura de decisão para determinar a taxa de emissão com base no tipo de combustível.
3. Teste do Programa:
• Peça ao usuário para inserir o tipo de combustível, o consumo do veículo e a distância percorrida.
• Chame a função calcular_emissoes e exiba a quantidade total de CO2 emitida pelo veículo.
4. Mensagem Adicional:
• Após o cálculo (fora da função), exiba uma mensagem indicando se o veículo é considerado eficiente em termos de emissões de CO2. Por exemplo, se as emissões forem menores do que 100 kg, exiba "Veículo eficiente em termos de emissões!".
"""

def calcular_emissoes(tipo_combustivel, consumo, distancia):
    if tipo_combustivel == 'gasolina':
        taxa_emissao = 2.3
    elif tipo_combustivel == 'diesel':
        taxa_emissao = 2.7
    elif tipo_combustivel == 'eletrico':
        taxa_emissao = 0.0
        return 0
    else:
        print("Tipo de combustível inválido.")

    litros_consumidos = distancia / consumo

    co2_emitido = litros_consumidos * taxa_emissao

    return co2_emitido

tipo_combustivel = input("Insira o combustível (gasolina, diesel, eletrico): ")
consumo = float(input("Insira o consumo do veículo (km/litro): "))
distancia = float(input("Insira a distância percorrida (km): "))

co2_emitido = calcular_emissoes(tipo_combustivel, consumo, distancia)

print(f"A quantidade de CO2 emitida pelo veículo é: {co2_emitido} kg")

if co2_emitido < 100:
  print("Veículo eficiente em termos de emissões!")
else:
  print("Veículo não eficiente em termos de emissões!")

"""5. Desafio Final:
• Você tem uma frota de veículos e receberá mensalmente uma lista com seus veículos contendo o tipo de combustível, consumo do veículo e distância percorrida no mês. Seu trabalho será fornecer a emissão de CO2 de sua frota naquele mês. Para isso, criar uma função, emissao_mensal, que receberá esses dados e fornecerá o consumo mensal total de CO2 em kg. Considere que a lista de entrada dessa função será da forma:
   dados_frota = [('gasolina', 12.5, 820), ('eletrico', 0, 357), ('diesel', 8.6, 1127), ('diesel', 9.1, 974)]
• Adicionalmente, alertar quantos carros elétricos precisam ser adicionados à frota para que a emissão média de CO2 ao mês dos veículos não ultrapasse 100 kg por veículo por mês.
"""

def emissao_mensal(dados_frota):
    total_co2 = 0
    carros_eletricos_adicionais = 0
    total_carros = len(dados_frota)

    for veiculo in dados_frota:
        tipo_combustivel, consumo, distancia = veiculo
        co2_emitido = calcular_emissoes(tipo_combustivel, consumo, distancia)
        if co2_emitido is not None:
            total_co2 += co2_emitido

    media_co2_por_veiculo = total_co2 / total_carros

    if media_co2_por_veiculo > 100:
        carros_eletricos_adicionais = int((media_co2_por_veiculo - 100) * total_carros)

    return total_co2, carros_eletricos_adicionais

dados_frota = [('gasolina', 12.5, 820), ('eletrico', 0, 357), ('diesel', 8.6, 1127), ('diesel', 9.1, 974)]

total_co2, carros_eletricos_adicionais = emissao_mensal(dados_frota)

print(f"A emissão total de CO2 da frota é: {total_co2} kg")

if carros_eletricos_adicionais > 0:
    print(f"{carros_eletricos_adicionais} carros elétricos adicionais precisam ser adicionados à frota.")
else:
    print("")